////////////////////////////////////////
// ▄▀█ █░░ ▄▀█ █▀█ █▄░█ █ ▄▀█ █▄░█
// █▀█ █▄▄ █▀█ █▀▀ █░▀█ █ █▀█ █░▀█
// 🅢🅐🅢🅢 🅜🅞🅓🅤🅛🅔🅢
// 
// (c) Copyright 2025 Alapnian
// (/) Developed by Alapnian Sass Dev
////////////////////////////////////////
@charset 'UTF-8';

@use "sass:meta";
@use "sass:map";
@use "internal/format";
@use "internal/throw";

///
/// Output an error message stating an issue with one or more variables.
/// 
/// @param  {String}        $message    - The message which describes the issue.
/// @param  {ArgList<*>}    $names      - The names of the variables for which there is an issue.
/// @param  {Bool|'warn'}   $catch      - Optionally catch errors, and output them as CSS comments without stopping compilation.
/// 
/// @output A string describing the reason one or more variables are misconfigured.
/// 
/// @group  API
/// @access public
/// 
/// @require    {Function}      meta.keywords
/// @require    {Function}      meta.variable-exists
/// @require    {Function}      map.has-key
/// @require    {Function}      map.get
/// @require    {Function}      format.variable-name
/// @require    {Mixin}         throw.exception
/// 
@mixin variable($message, $names...) {
    $keywords: meta.keywords($names);

    $catch: if(map.has-key($keywords, 'catch'), map.get($keywords, 'catch'), if(meta.variable-exists('catch-error'), $catch-error, false));
    $names: format.variable-name($names);

    @include throw.exception($message, $names, $catch);
}

///
/// Alias mixin name of throw.variable
/// 
/// @group  API
/// @access public
/// 
/// @require    {Function}      meta.keywords
/// @require    {Function}      meta.variable-exists
/// @require    {Function}      map.has-key
/// @require    {Function}      map.get
/// @require    {Function}      format.variable-name
/// @require    {Mixin}         throw.exception
/// 
@mixin variable-exception($message, $names...) {
    $keywords: meta.keywords($names);

    $catch: if(map.has-key($keywords, 'catch'), map.get($keywords, 'catch'), if(meta.variable-exists('catch-error'), $catch-error, false));
    $names: format.variable-name($names);

    @include throw.exception($message, $names, $catch);
}